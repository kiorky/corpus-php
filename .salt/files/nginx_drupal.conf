{% set ddata = salt['mc_utils.json_load'](data) %}
{% set data = ddata.cfg.data %}
# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-
include php_fpm_status_vhost.conf;

# The 'default' location.
gzip              on;
gzip_buffers      16 8k;
gzip_comp_level   1;
gzip_http_version 1.1;
gzip_min_length   10;
gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf application/javascript;
gzip_vary         on;
gzip_proxied      any; # Compression for all requests.
## No need for regexps. See
## http://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
gzip_disable "msie6";

## Serve already compressed files directly, bypassing on-the-fly
## compression.
gzip_static on;

{% if data.get('http_users', {}) %}
auth_basic            "Restricted";
auth_basic_user_file  {{data.htaccess}};
{% endif %}

location / {
    index index.php;
    location =/401.html {
        auth_basic off;
    }

    # Drupal 404 from can impact performance. If using a module like
    # search404 then 404's *have *to be handled by Drupal. Uncomment to
    # relay the handling of 404's to Drupal.
    # error_page 404 /index.php;

    # Use index.html whenever there's no index.php.
    # location = / {
    #     error_page 404 =200 /index.html;
    # }

    # Using a nested location is the 'correct' way to use regexes.

    # Regular private file serving (i.e. handled by Drupal).
    location ^~ /system/files/ {
        try_files $uri /index.php?q=$uri&$args;
        # For not signaling a 404 in the error log whenever the
        # system/files directory is accessed add the line below.
        # Note that the 404 is the intended behavior.
        log_not_found off;
    }


    # Drupal 7 generated image handling, i.e., imagecache in core. See:
    # https://drupal.org/node/371374.
    location ~* /files/styles/ {
        access_log off;
        expires 30d;
        try_files $uri /index.php?q=$uri&$args;
    }

# Advanced Aggregation module CSS
# support. http://drupal.org/project/advagg.
#    location ^~ /sites/default/files/advagg_css/ {
#        location ~* /sites/default/files/advagg_css/.*\.css$ {
#            access_log off;
#            add_header Pragma '';
#            add_header Cache-Control 'public, max-age=946080000';
#            add_header Accept-Ranges '';
#            try_files $uri /index.php?q=$uri&$args;
#        }
#    }

# Advanced Aggregation module JS
# support. http://drupal.org/project/advagg.
#    location ^~ /sites/default/files/advagg_js/ {
#        location ~* /sites/default/files/advagg_js/.*\.js$ {
#            access_log off;
#            add_header Pragma '';
#            add_header Cache-Control 'public, max-age=946080000';
#            add_header Accept-Ranges '';
#            try_files $uri /index.php?q=$uri&$args;
#        }
#    }

    # All static files will be served directly.
    location ~* ^.+\.(?:css|js|jpe?g|gif|htc|ico|png|html|xml|woff|eot|ttf|svg)$ {
        access_log off;
        expires 30d;
        # No need to bleed constant updates. Send the all shebang in one
        # fell swoop.
        tcp_nodelay off;
        # Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    # Trying to access private files directly returns a 404.
    location ^~ /sites/default/files/private/ {
        internal;
    }

    # PDFs and powerpoint files handling.
    location ~* ^.+\.(?:pdf|pptx?)$ {
        expires 30d;
        # No need to bleed constant updates. Send the all shebang in one
        # fell swoop.
        tcp_nodelay off;
    }

#    # MP3 and Ogg/Vorbis files are served using AIO when supported. Your OS must support it.
#    location ^~ /sites/default/files/audio/mp3 {
#        location ~* ^/sites/default/files/audio/mp3/.*\.mp3$ {
#            # directio 4k: # for XFS
#            # If you're using ext3 or similar uncomment the line below and comment the above.
#            directio 512; # for ext3 or similar (block alignments)
#            tcp_nopush off;
#            # aio on;
#            output_buffers 1 2M;
#        }
#    }

#    location ^~ /sites/default/files/audio/ogg {
#        location ~* ^/sites/default/files/audio/ogg/.*\.ogg$ {
#            # directio 4k: # for XFS
#            # If you're using ext3 or similar uncomment the line below and comment the above.
#            directio 512; # for ext3 or similar (block alignments)
#            tcp_nopush off;
#            # aio on;
#            output_buffers 1 2M;
#        }
#    }

# Pseudo streaming of FLV files:
# http://wiki.nginx.org/HttpFlvStreamModule.
#    location ^~ /sites/default/files/video/flv {
#       location ~* ^/sites/default/files/video/flv/.*\.flv$ {
#            flv;
#        }
#    }

# Pseudo streaming of H264/AAC files. This requires an Nginx
# version greater or equal to 1.0.7 for the stable branch and
# greater or equal to 1.1.3 for the development branch.
# Cf. http://nginx.org/en/docs/http/ngx_http_mp4_module.html.
#    location ^~ /sites/default/files/video/mp4 { # videos
#        location ~* ^/sites/default/files/video/mp4/.*\.(?:mp4|mov)$ {
#            mp4;
#            mp4_buffer_size     1M;
#            mp4_max_buffer_size 5M;
#        }
#   }

#    location ^~ /sites/default/files/audio/m4a { # audios
#        location ~* ^/sites/default/files/audio/m4a/.*\.m4a$ {
#            mp4;
#            mp4_buffer_size     1M;
#            mp4_max_buffer_size 5M;
#        }
#    }

# Advanced Help module makes each module provided README available.
#     location ^~ /help/ {
#        location ~* ^/help/[^/]*/README\.txt$ {
#            # Include the specific FastCGI configuration. This is for a
#            # FCGI backend like php-cgi or php-fpm.
#            include fastcgi_fpm_drupal_private_files.conf;
#            # If proxying to apache comment the two lines above and
#        }
#    }

    # Replicate the Apache <FilesMatch> directive of Drupal standard
    # .htaccess. Disable access to any code files. Return a 404 to curtail
    # information disclosure. Hide also the text files.
    location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404;
    }

    # First we try the URI and relay to the /index.php?q=$uri&$args if not found.
    try_files $uri /index.php?q=$uri&$args;
}

# -------- Security measures --------

# Restrict access to the strictly necessary PHP files. Reducing the
# scope for exploits. Handling of PHP code and the Drupal event loop.
location = /index.php {
    include fastcgi_fpm_drupal.conf;
    # ensure gzip/deflate and clear text are stored differently in Varnish
    add_header Vary 'Accept-Encoding';
    fastcgi_pass unix:$document_root/../var/run/fpm.sock;


    # Filefield Upload progress
    # http://drupal.org/project/filefield_nginx_progress support
    # through the NgninxUploadProgress modules.
    # track_uploads uploads 60s;
}


# MONITORING/HEALTH CHECKS
# access to this file is granted for health-checks (should we restrict IP?)
location = /monitor-status.php {
    auth_basic off;
    include fastcgi_fpm_drupal.conf;
    # ensure gzip/deflate and clear text are stored differently in Varnish
    add_header Vary 'Accept-Encoding';
    fastcgi_pass unix:$document_root/../var/run/fpm.sock;
}

# Disallow access to .git directory: return 404 as not to disclose
# information.
location = /.git {
    return 404;
}

# Disallow access to patches directory.
location = /patches {
    return 404;
}

# Disallow access to drush backup directory.
location = /backup {
    return 404;
}

# Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
}

# RSS feed support.
location = /rss.xml {
    try_files $uri /index.php?q=$uri;
}

# XML Sitemap support.
location = /sitemap.xml {
    try_files $uri /index.php?q=$uri;
}

# Support for favicon. Return a 204 (No Content) if the favicon
# doesn't exist.
location = /favicon.ico {
    try_files /favicon.ico =204;
}

# Any other attempt to access PHP files returns a 404.
# Add "location =" sections for each legacy PHP file
location ~* ^.+\.php$ {
    return 404;
}
